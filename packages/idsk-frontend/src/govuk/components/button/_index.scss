////
/// @group components/button
////

/// Button component background colour
///
/// @type Colour
/// @access public

$govuk-button-background-colour: govuk-colour("blue") !default;

/// Button component text colour
///
/// @type Colour
/// @access public

$govuk-button-text-colour: govuk-colour("white") !default;

/// Inverted button component background colour
///
/// @type Colour
/// @access public

$govuk-inverse-button-background-colour: govuk-colour("white") !default;

/// Inverted button component text colour
///
/// @type Colour
/// @access public

$govuk-inverse-button-text-colour: $govuk-brand-colour !default;

@include govuk-exports("govuk/component/button") {
  // primary basic
  $govuk-button-background-colour: $govuk-button-background-colour;
  $govuk-button-text-colour: $govuk-button-text-colour;
  $govuk-button-active-colour: govuk-colour("dark-blue");
  $govuk-button-disabled-colour: govuk-colour("greyN500");
  $govuk-button-border-colour: transparent;
  $govuk-button-border-hover-colour: govuk-colour("dark-blue");
  // primary success
  $govuk-button-success-background-colour: govuk-colour("green");
  $govuk-button-success-active-colour: govuk-colour("dark-green");
  $govuk-button-success-border-hover-colour: govuk-colour("dark-green");
  // primary warning
  $govuk-button-warning-background-colour: govuk-colour("red");
  $govuk-button-warning-active-colour: govuk-colour("dark-red");
  $govuk-button-warning-border-hover-colour: govuk-colour("dark-red");

  // secondary basic
  $govuk-secondary-background-colour: govuk-colour("light-blue");
  $govuk-secondary-text-colour: govuk-colour("dark-blue");
  $govuk-secondary-disabled-colour: govuk-colour("greyN500");
  $govuk-secondary-disabled-background-colour: govuk-colour("greyN100");
  $govuk-secondary-border-colour: govuk-colour("blue");
  $govuk-secondary-active-colour: govuk-colour("dark-blue");
  $govuk-secondary-border-hover-colour: govuk-colour("blue");
  // secondary success
  $govuk-secondary-success-background-colour: govuk-colour("light-green");
  $govuk-secondary-success-text-colour: govuk-colour("dark-green");
  $govuk-secondary-success-border-colour: govuk-colour("green");
  $govuk-secondary-success-active-colour: govuk-colour("dark-green");
  $govuk-secondary-success-border-hover-colour: govuk-colour("green");
  // secondary warning
  $govuk-secondary-warning-background-colour: govuk-colour("light-red");
  $govuk-secondary-warning-text-colour: govuk-colour("dark-red");
  $govuk-secondary-warning-border-colour: govuk-colour("red");
  $govuk-secondary-warning-active-colour: govuk-colour("dark-red");
  $govuk-secondary-warning-border-hover-colour: govuk-colour("red");

  // Inverse button variables
  $govuk-inverse-button-colour: $govuk-inverse-button-background-colour;
  $govuk-inverse-button-text-colour: $govuk-inverse-button-text-colour;
  $govuk-inverse-button-hover-colour: govuk-tint($govuk-inverse-button-text-colour, 90%);
  $govuk-inverse-button-shadow-colour: govuk-shade($govuk-inverse-button-text-colour, 30%);

  // Because the shadow (s0) is visually 'part of' the button, we need to reduce
  // the height of the button to compensate by adjusting its padding (s1) and
  // increase the bottom margin to include it (s2).
  $button-shadow-size: $govuk-border-width-form-element;

  .govuk-button {
    @include govuk-font($size: 16, $line-height: 19px, $weight: bold);

    box-sizing: border-box;
    display: inline-block;
    position: relative;
    width: 100%;
    margin-top: 0;
    margin-right: 0;
    margin-left: 0;
    @include govuk-responsive-margin(6, "bottom", $adjustment: $button-shadow-size); // s2
    padding: (govuk-spacing(2) - $govuk-border-width-form-element) govuk-spacing(2)
      (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2)); // s1
    border: $govuk-border-width-form-element solid $govuk-button-border-colour;
    border-radius: 5px;
    color: $govuk-button-text-colour;
    background-color: $govuk-button-background-colour;
    text-align: center;
    vertical-align: top;
    cursor: pointer;
    appearance: none;

    @include govuk-media-query($from: tablet) {
      width: auto;
    }

    &:focus {
      z-index: 10;
      @include govuk-focused-text;
    }

    // Ensure that any global link styles are overridden

    // Fix unwanted button padding in Firefox
    &::-moz-focus-inner {
      padding: 0;
      border: 0;
    }

    // The following adjustments do not work for <input type="button"> as
    // non-container elements cannot include pseudo elements (i.e. ::before).

    // Use a pseudo element to expand the click target area to include the
    // button's shadow as well, in case users try to click it.
    &::before {
      content: "";
      display: block;

      position: absolute;

      top: -$govuk-border-width-form-element;
      right: -$govuk-border-width-form-element;
      bottom: -($govuk-border-width-form-element + $button-shadow-size);
      left: -$govuk-border-width-form-element;

      background: transparent;
    }

    &:hover {
      box-shadow: 0 0 0 3px $govuk-button-border-hover-colour;
    }

    &[disabled] {
      background-color: $govuk-button-disabled-colour;
      box-shadow: none;
      cursor: not-allowed;
    }

    &__basic {
      &:active {
        background-color: $govuk-button-active-colour;
      }

      &[disabled] {
        background-color: $govuk-button-disabled-colour;
        box-shadow: none;
        cursor: not-allowed;
      }
    }

    &__success {
      background-color: $govuk-button-success-background-colour;

      &:hover {
        box-shadow: 0 0 0 3px $govuk-button-success-border-hover-colour;
      }

      &:active {
        background: $govuk-button-success-active-colour;
      }
    }

    &__warning {
      background-color: $govuk-button-warning-background-colour;

      &:hover {
        box-shadow: 0 0 0 2px $govuk-button-warning-border-hover-colour;
      }

      &:active {
        background: $govuk-button-warning-active-colour;
      }
    }

    &--sec {
      border: 2px solid $govuk-secondary-border-colour;
      color: $govuk-secondary-text-colour;
      background-color: $govuk-secondary-background-colour;

      &:hover {
        box-shadow: 0 0 0 2px $govuk-secondary-border-hover-colour;
      }

      &:active {
        border-color: $govuk-secondary-active-colour;
        background-color: $govuk-secondary-background-colour;

        &:hover {
          box-shadow: 0 0 0 2px $govuk-secondary-active-colour;
        }
      }

      &[disabled] {
        border-color: $govuk-secondary-disabled-colour;
        outline: none;
        color: $govuk-secondary-disabled-colour;
        background: $govuk-secondary-disabled-background-colour;
        cursor: not-allowed;

        &:hover {
          box-shadow: none;
        }
      }

      &__success {
        border-color: $govuk-secondary-success-border-colour;
        color: $govuk-secondary-success-text-colour;
        background: $govuk-secondary-success-background-colour;

        &:hover {
          box-shadow: 0 0 0 2px $govuk-secondary-success-border-hover-colour;
        }

        &:active {
          border-color: $govuk-secondary-success-active-colour;

          &:hover {
            box-shadow: 0 0 0 2px $govuk-secondary-success-active-colour;
          }
        }
      }

      &__warning {
        border-color: $govuk-secondary-warning-border-colour;
        color: $govuk-secondary-warning-text-colour;
        background: $govuk-secondary-warning-background-colour;

        &:hover {
          box-shadow: 0 0 0 2px $govuk-secondary-warning-border-hover-colour;
        }

        &:active {
          border-color: $govuk-secondary-warning-active-colour;

          &:hover {
            box-shadow: 0 0 0 2px $govuk-secondary-warning-active-colour;
          }
        }
      }
    }

    &--texted {
      border: none;
      color: govuk-colour("blue");
      background-color: transparent;
      text-decoration: underline;

      &:hover {
        color: govuk-colour("dark-blue");
        background-color: transparent;
        box-shadow: none;
        text-decoration: underline;
        text-decoration-thickness: 3px;
      }

      &__success {
        color: govuk-colour("green");

        &:hover {
          color: govuk-colour("dark-green");
        }
      }

      &__warning {
        color: govuk-colour("red");

        &:hover {
          color: govuk-colour("dark-red");
        }
      }

      &[disabled] {
        outline: none;
        color: $govuk-secondary-disabled-colour;
        background: transparent;
        cursor: not-allowed;

        &:hover {
          box-shadow: none;
          text-decoration-thickness: initial;
        }
      }
    }

    &--texted--inverse {
      border: none;
      color: govuk-colour("white");
      background-color: transparent;
      letter-spacing: inherit;

      & > *:not(.material-icons) {
        text-decoration: underline;
      }

      &:not([disabled]):hover {
        outline-color: govuk-colour("white");
        background-color: transparent;
        box-shadow: none;

        // & > *:not(.material-icons) {
        //   text-decoration: none;
        // }
      }

      &:focus {
        @include govuk-focused-text;
        outline-color: govuk-colour("white");

        // & > *:not(.material-icons) {
        //   text-decoration: none;
        // }
      }
    }

    &__large {
      padding: 0.75rem 1.25rem;
    }
  }

  .govuk-button--start {
    @include govuk-typography-weight-bold;
    @include govuk-font-size($size: 24, $line-height: 1);

    display: inline-flex;
    min-height: auto;

    justify-content: center;
  }

  .govuk-button__start-icon {
    margin-left: govuk-spacing(1);

    @include govuk-media-query($from: desktop) {
      margin-left: govuk-spacing(2);
    }
    vertical-align: middle;
    flex-shrink: 0;
    align-self: center;
    // Work around SVGs not inheriting color from parent in forced color mode
    // (https://github.com/w3c/csswg-drafts/issues/6310)
    forced-color-adjust: auto;
  }
}
